/*
 * STORY MODEL
 * ----------
 * Represents a story generated by the AI.
 * 
 * Properties:
 * - id: Unique identifier for each story
 * - title: Story title
 * - content: Main text content of the story
 * - createdAt: Timestamp when story was created
 * - isPlaying: Whether the story is currently being played
 * - isFavorite: Whether the story is marked as favorite
 * 
 * Functions:
 * - JSON conversion for storage (toJson/fromJson)
 * - Batch operations for list of stories
 */

// class Story {
//   final String id;
//   final String title;
//   final String content;
//   final DateTime createdAt;
//   bool isPlaying;
//   bool isFavorite;

//   Story({
//     required this.id,
//     required this.title,
//     required this.content,
//     required this.createdAt,
//     this.isPlaying = false,
//     this.isFavorite = false,
//   });

//   // Create a copy with modified properties
//   Story copyWith({
//     String? id,
//     String? title,
//     String? content,
//     DateTime? createdAt,
//     bool? isPlaying,
//     bool? isFavorite,
//   }) {
//     return Story(
//       id: id ?? this.id,
//       title: title ?? this.title,
//       content: content ?? this.content,
//       createdAt: createdAt ?? this.createdAt,
//       isPlaying: isPlaying ?? this.isPlaying,
//       isFavorite: isFavorite ?? this.isFavorite,
//     );
//   }

//   Map<String, dynamic> toJson() {
//     return {
//       'id': id,
//       'title': title,
//       'content': content,
//       'createdAt': createdAt.toIso8601String(),
//       'isPlaying': isPlaying,
//       'isFavorite': isFavorite,
//     };
//   }

//   factory Story.fromJson(Map<String, dynamic> json) {
//     return Story(
//       id: json['id'],
//       title: json['title'],
//       content: json['content'],
//       createdAt: DateTime.parse(json['createdAt']),
//       isPlaying: json['isPlaying'] ?? false,
//       isFavorite: json['isFavorite'] ?? false,
//     );
//   }

//   // Convert list of stories to JSON
//   static List<Map<String, dynamic>> storiesToJson(List<Story> stories) {
//     return stories.map((story) => story.toJson()).toList();
//   }

//   // Create list of stories from JSON
//   static List<Story> storiesFromJson(List<dynamic> json) {
//     return json
//         .map((item) => Story.fromJson(item as Map<String, dynamic>))
//         .toList();
//   }
// }

class Story {
  final String id; // Unique identifier for the story
  final String title;
  final String content;
  final String userId; // ID of the user who created the story
  final DateTime createdAt;
  bool isFavorite;
  bool isPlaying;

  Story({
    required this.id,
    required this.title,
    required this.content,
    required this.userId,
    required this.createdAt,
    this.isFavorite = false,
    this.isPlaying = false,
  });

  Story copyWith({
    String? id,
    String? title,
    String? content,
    String? userId,
    DateTime? createdAt,
    bool? isPlaying,
    bool? isFavorite,
  }) {
    return Story(
      id: id ?? this.id,
      title: title ?? this.title,
      content: content ?? this.content,
      userId: userId ?? this.userId,
      createdAt: createdAt ?? this.createdAt,
      isFavorite: isFavorite ?? this.isFavorite,
      isPlaying: isPlaying ?? this.isPlaying,
    );
  }

  Map<String, dynamic> toJson() => {
        'title': title,
        'content': content,
        'userId': userId,
        'createdAt': createdAt.toIso8601String(),
        'isFavorite': isFavorite,
        'isPlaying': isPlaying,
      };

  factory Story.fromJson(Map<String, dynamic> json) => Story(
        id: json['id'],
        title: json['title'],
        content: json['content'],
        userId: json['userId'],
        createdAt: DateTime.parse(json['createdAt']),
        isFavorite: json['isFavorite'] ?? false,
        isPlaying: json['isPlaying'] ?? false,
      );
}
